/*
 * generated by Xtext 2.11.0
 */
parser grammar InternalLilyChantParser;

options {
	tokenVocab=InternalLilyChantLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package org.lilychant.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.lilychant.services.LilyChantGrammarAccess;

}

@members {

 	private LilyChantGrammarAccess grammarAccess;

    public InternalLilyChantParser(TokenStream input, LilyChantGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Script";
   	}

   	@Override
   	protected LilyChantGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleScript
entryRuleScript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScriptRule()); }
	iv_ruleScript=ruleScript
	{ $current=$iv_ruleScript.current; }
	EOF;

// Rule Script
ruleScript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getScriptAccess().getTonesToneParserRuleCall_0_0());
				}
				lv_tones_0_0=ruleTone
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScriptRule());
					}
					add(
						$current,
						"tones",
						lv_tones_0_0,
						"org.lilychant.LilyChant.Tone");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getScriptAccess().getChantsChantParserRuleCall_1_0());
				}
				lv_chants_1_0=ruleChant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScriptRule());
					}
					add(
						$current,
						"chants",
						lv_chants_1_0,
						"org.lilychant.LilyChant.Chant");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleTone
entryRuleTone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getToneRule()); }
	iv_ruleTone=ruleTone
	{ $current=$iv_ruleTone.current; }
	EOF;

// Rule Tone
ruleTone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Tone
		{
			newLeafNode(otherlv_0, grammarAccess.getToneAccess().getToneKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getToneAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getToneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.lilychant.LilyChant.ID");
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getToneAccess().getBEGINTerminalRuleCall_2());
		}
		otherlv_3=Voices
		{
			newLeafNode(otherlv_3, grammarAccess.getToneAccess().getVoicesKeyword_3());
		}
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getToneAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getToneAccess().getVoiceNamesVoiceNameParserRuleCall_5_0());
				}
				lv_voiceNames_5_0=ruleVoiceName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getToneRule());
					}
					add(
						$current,
						"voiceNames",
						lv_voiceNames_5_0,
						"org.lilychant.LilyChant.VoiceName");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getToneAccess().getENDTerminalRuleCall_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getToneAccess().getPhrasesTonePhraseParserRuleCall_7_0());
				}
				lv_phrases_7_0=ruleTonePhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getToneRule());
					}
					add(
						$current,
						"phrases",
						lv_phrases_7_0,
						"org.lilychant.LilyChant.TonePhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_8=RULE_END
		{
			newLeafNode(this_END_8, grammarAccess.getToneAccess().getENDTerminalRuleCall_8());
		}
	)
;

// Entry rule entryRuleVoiceName
entryRuleVoiceName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoiceNameRule()); }
	iv_ruleVoiceName=ruleVoiceName
	{ $current=$iv_ruleVoiceName.current; }
	EOF;

// Rule VoiceName
ruleVoiceName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getVoiceNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVoiceNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.lilychant.LilyChant.ID");
			}
		)
	)
;

// Entry rule entryRuleTonePhrase
entryRuleTonePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTonePhraseRule()); }
	iv_ruleTonePhrase=ruleTonePhrase
	{ $current=$iv_ruleTonePhrase.current; }
	EOF;

// Rule TonePhrase
ruleTonePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Phrase
		{
			newLeafNode(otherlv_0, grammarAccess.getTonePhraseAccess().getPhraseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTonePhraseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTonePhraseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.lilychant.LilyChant.ID");
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getTonePhraseAccess().getBEGINTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTonePhraseAccess().getVoicesVoicePhraseParserRuleCall_3_0());
				}
				lv_voices_3_0=ruleVoicePhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTonePhraseRule());
					}
					add(
						$current,
						"voices",
						lv_voices_3_0,
						"org.lilychant.LilyChant.VoicePhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getTonePhraseAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleVoicePhrase
entryRuleVoicePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVoicePhraseRule()); }
	iv_ruleVoicePhrase=ruleVoicePhrase
	{ $current=$iv_ruleVoicePhrase.current; }
	EOF;

// Rule VoicePhrase
ruleVoicePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Voice
		{
			newLeafNode(otherlv_0, grammarAccess.getVoicePhraseAccess().getVoiceKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVoicePhraseRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getVoicePhraseAccess().getNameVoiceNameCrossReference_1_0());
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getVoicePhraseAccess().getBEGINTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVoicePhraseAccess().getNotesNoteParserRuleCall_3_0());
				}
				lv_notes_3_0=ruleNote
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVoicePhraseRule());
					}
					add(
						$current,
						"notes",
						lv_notes_3_0,
						"org.lilychant.LilyChant.Note");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getVoicePhraseAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleChant
entryRuleChant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChantRule()); }
	iv_ruleChant=ruleChant
	{ $current=$iv_ruleChant.current; }
	EOF;

// Rule Chant
ruleChant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Chant
		{
			newLeafNode(otherlv_0, grammarAccess.getChantAccess().getChantKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getChantAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.lilychant.LilyChant.STRING");
				}
			)
		)?
		otherlv_2=Tone
		{
			newLeafNode(otherlv_2, grammarAccess.getChantAccess().getToneKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChantRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getChantAccess().getToneToneCrossReference_3_0());
				}
			)
		)
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getChantAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChantAccess().getPhrasesLyricPhraseParserRuleCall_5_0());
				}
				lv_phrases_5_0=ruleLyricPhrase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChantRule());
					}
					add(
						$current,
						"phrases",
						lv_phrases_5_0,
						"org.lilychant.LilyChant.LyricPhrase");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getChantAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleLyricPhrase
entryRuleLyricPhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLyricPhraseRule()); }
	iv_ruleLyricPhrase=ruleLyricPhrase
	{ $current=$iv_ruleLyricPhrase.current; }
	EOF;

// Rule LyricPhrase
ruleLyricPhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getLyricPhraseAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLyricPhraseRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getLyricPhraseAccess().getExplicitPhraseTonePhraseCrossReference_0_1_0());
					}
				)
			)
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getLyricPhraseAccess().getRightParenthesisKeyword_0_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLyricPhraseAccess().getNoteGroupsNoteGroupParserRuleCall_1_0());
				}
				lv_noteGroups_3_0=ruleNoteGroup
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLyricPhraseRule());
					}
					add(
						$current,
						"noteGroups",
						lv_noteGroups_3_0,
						"org.lilychant.LilyChant.NoteGroup");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getLyricPhraseAccess().getBarBarlineEnumRuleCall_2_0());
				}
				lv_bar_4_0=ruleBarline
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLyricPhraseRule());
					}
					set(
						$current,
						"bar",
						lv_bar_4_0,
						"org.lilychant.LilyChant.Barline");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNoteGroup
entryRuleNoteGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoteGroupRule()); }
	iv_ruleNoteGroup=ruleNoteGroup
	{ $current=$iv_ruleNoteGroup.current; }
	EOF;

// Rule NoteGroup
ruleNoteGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						(
							lv_syllables_0_0=RULE_ID
							{
								newLeafNode(lv_syllables_0_0, grammarAccess.getNoteGroupAccess().getSyllablesIDTerminalRuleCall_0_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNoteGroupRule());
								}
								addWithLastConsumed(
									$current,
									"syllables",
									lv_syllables_0_0,
									"org.lilychant.LilyChant.ID");
							}
						)
					)
					(
						((
							(
								RULE_HYPHEN
							)
						)
						)=>
						(
							(
								lv_syllables_1_0=RULE_HYPHEN
								{
									newLeafNode(lv_syllables_1_0, grammarAccess.getNoteGroupAccess().getSyllablesHYPHENTerminalRuleCall_0_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getNoteGroupRule());
									}
									addWithLastConsumed(
										$current,
										"syllables",
										lv_syllables_1_0,
										"org.lilychant.LilyChant.HYPHEN");
								}
							)
						)
					)?
				)
				    |
				(
					(
						(
							lv_syllables_2_0=RULE_HYPHEN
							{
								newLeafNode(lv_syllables_2_0, grammarAccess.getNoteGroupAccess().getSyllablesHYPHENTerminalRuleCall_0_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNoteGroupRule());
								}
								addWithLastConsumed(
									$current,
									"syllables",
									lv_syllables_2_0,
									"org.lilychant.LilyChant.HYPHEN");
							}
						)
					)
					(
						(
							lv_syllables_3_0=RULE_ID
							{
								newLeafNode(lv_syllables_3_0, grammarAccess.getNoteGroupAccess().getSyllablesIDTerminalRuleCall_0_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNoteGroupRule());
								}
								addWithLastConsumed(
									$current,
									"syllables",
									lv_syllables_3_0,
									"org.lilychant.LilyChant.ID");
							}
						)
					)
				)
			)
			(
				(
					lv_syllables_4_0=RULE_EXTENDER
					{
						newLeafNode(lv_syllables_4_0, grammarAccess.getNoteGroupAccess().getSyllablesEXTENDERTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNoteGroupRule());
						}
						addWithLastConsumed(
							$current,
							"syllables",
							lv_syllables_4_0,
							"org.lilychant.LilyChant.EXTENDER");
					}
				)
			)*
		)
		    |
		(
			(
				lv_syllables_5_0=RULE_SKIP
				{
					newLeafNode(lv_syllables_5_0, grammarAccess.getNoteGroupAccess().getSyllablesSKIPTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNoteGroupRule());
					}
					addWithLastConsumed(
						$current,
						"syllables",
						lv_syllables_5_0,
						"org.lilychant.LilyChant.SKIP");
				}
			)
		)
		    |
		(
			this_START_NOTE_GROUP_6=RULE_START_NOTE_GROUP
			{
				newLeafNode(this_START_NOTE_GROUP_6, grammarAccess.getNoteGroupAccess().getSTART_NOTE_GROUPTerminalRuleCall_2_0());
			}
			(
				(
					(
						lv_syllables_7_1=RULE_ID
						{
							newLeafNode(lv_syllables_7_1, grammarAccess.getNoteGroupAccess().getSyllablesIDTerminalRuleCall_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNoteGroupRule());
							}
							addWithLastConsumed(
								$current,
								"syllables",
								lv_syllables_7_1,
								"org.lilychant.LilyChant.ID");
						}
						    |
						lv_syllables_7_2=RULE_HYPHEN
						{
							newLeafNode(lv_syllables_7_2, grammarAccess.getNoteGroupAccess().getSyllablesHYPHENTerminalRuleCall_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNoteGroupRule());
							}
							addWithLastConsumed(
								$current,
								"syllables",
								lv_syllables_7_2,
								"org.lilychant.LilyChant.HYPHEN");
						}
						    |
						lv_syllables_7_3=RULE_EXTENDER
						{
							newLeafNode(lv_syllables_7_3, grammarAccess.getNoteGroupAccess().getSyllablesEXTENDERTerminalRuleCall_2_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNoteGroupRule());
							}
							addWithLastConsumed(
								$current,
								"syllables",
								lv_syllables_7_3,
								"org.lilychant.LilyChant.EXTENDER");
						}
					)
				)
			)+
			this_END_NOTE_GROUP_8=RULE_END_NOTE_GROUP
			{
				newLeafNode(this_END_NOTE_GROUP_8, grammarAccess.getNoteGroupAccess().getEND_NOTE_GROUPTerminalRuleCall_2_2());
			}
		)
	)
;

// Entry rule entryRuleNote
entryRuleNote returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNoteRule()); }
	iv_ruleNote=ruleNote
	{ $current=$iv_ruleNote.current.getText(); }
	EOF;

// Rule Note
ruleNote returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getNoteAccess().getIDTerminalRuleCall_0());
		}
		(
			this_DURATION_1=RULE_DURATION
			{
				$current.merge(this_DURATION_1);
			}
			{
				newLeafNode(this_DURATION_1, grammarAccess.getNoteAccess().getDURATIONTerminalRuleCall_1());
			}
		)?
	)
;

// Rule Barline
ruleBarline returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=VerticalLine
			{
				$current = grammarAccess.getBarlineAccess().getSingleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBarlineAccess().getSingleEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=VerticalLineVerticalLine
			{
				$current = grammarAccess.getBarlineAccess().getDoubleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBarlineAccess().getDoubleEnumLiteralDeclaration_1());
			}
		)
	)
;
