/**
 * generated by Xtext 2.11.0
 */
package org.lilychant.lilyChantScript.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.lilychant.lilyChantScript.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.lilychant.lilyChantScript.LilyChantScriptPackage
 * @generated
 */
public class LilyChantScriptSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static LilyChantScriptPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LilyChantScriptSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = LilyChantScriptPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @parameter ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case LilyChantScriptPackage.SCRIPT:
      {
        Script script = (Script)theEObject;
        T result = caseScript(script);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.TONE:
      {
        Tone tone = (Tone)theEObject;
        T result = caseTone(tone);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.VOICE_NAME:
      {
        VoiceName voiceName = (VoiceName)theEObject;
        T result = caseVoiceName(voiceName);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.TONE_PHRASE:
      {
        TonePhrase tonePhrase = (TonePhrase)theEObject;
        T result = caseTonePhrase(tonePhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.VOICE_PHRASE:
      {
        VoicePhrase voicePhrase = (VoicePhrase)theEObject;
        T result = caseVoicePhrase(voicePhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.CHANT:
      {
        Chant chant = (Chant)theEObject;
        T result = caseChant(chant);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.LYRIC_PHRASE:
      {
        LyricPhrase lyricPhrase = (LyricPhrase)theEObject;
        T result = caseLyricPhrase(lyricPhrase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.NOTE_GROUP:
      {
        NoteGroup noteGroup = (NoteGroup)theEObject;
        T result = caseNoteGroup(noteGroup);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.SYLLABLE:
      {
        Syllable syllable = (Syllable)theEObject;
        T result = caseSyllable(syllable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.NOTE:
      {
        Note note = (Note)theEObject;
        T result = caseNote(note);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.HYPHEN_RULE:
      {
        HyphenRule hyphenRule = (HyphenRule)theEObject;
        T result = caseHyphenRule(hyphenRule);
        if (result == null) result = caseSyllable(hyphenRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.EXTENDER_RULE:
      {
        ExtenderRule extenderRule = (ExtenderRule)theEObject;
        T result = caseExtenderRule(extenderRule);
        if (result == null) result = caseSyllable(extenderRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LilyChantScriptPackage.SKIP_RULE:
      {
        SkipRule skipRule = (SkipRule)theEObject;
        T result = caseSkipRule(skipRule);
        if (result == null) result = caseSyllable(skipRule);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Script</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Script</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseScript(Script object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tone</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tone</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTone(Tone object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Voice Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Voice Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoiceName(VoiceName object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Tone Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Tone Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTonePhrase(TonePhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Voice Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Voice Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVoicePhrase(VoicePhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Chant</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Chant</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseChant(Chant object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Lyric Phrase</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Lyric Phrase</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLyricPhrase(LyricPhrase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Note Group</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Note Group</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNoteGroup(NoteGroup object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Syllable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Syllable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSyllable(Syllable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Note</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Note</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNote(Note object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hyphen Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hyphen Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHyphenRule(HyphenRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Extender Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Extender Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExtenderRule(ExtenderRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Skip Rule</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Skip Rule</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSkipRule(SkipRule object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //LilyChantScriptSwitch
